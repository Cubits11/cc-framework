[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cc-framework"
version = "0.1.0"
description = "Composability Coefficient (CC) framework for measuring guardrail interactions"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Pranav Bhave" }]
keywords = ["AI safety", "guardrails", "security", "evaluation", "statistics", "composability"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Security",
  "Topic :: Scientific/Engineering",
]

dependencies = [
  "numpy>=1.26",
  "scipy>=1.11",
  "pandas>=2.2",
  "matplotlib>=3.8",
  "pyyaml>=6.0.1",
  "scikit-learn>=1.3",
  "seaborn>=0.12",
  "plotly>=5.0",
  "jsonlines>=3.0",
  "cryptography>=41.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "black>=24.3",
  "ruff>=0.6",
  "isort>=5.13",
  "mypy>=1.10",
  "types-PyYAML>=6.0.12"
]
docs = [
  "mkdocs>=1.6",
  "mkdocs-material>=9.5"
]
notebooks = [
  "ipykernel",
  "matplotlib",
  "pandas",
  "numpy",
  "scipy",
  "pyyaml"
]

[project.urls]
Homepage = "https://github.com/Cubits11/cc-framework"
Repository = "https://github.com/Cubits11/cc-framework"
Issues = "https://github.com/Cubits11/cc-framework/issues"

# --- setuptools src-layout ---
[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["cc*"]

# --- pytest ---
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --maxfail=1 --disable-warnings --cov=src/cc --cov-report=term-missing"

# --- mypy ---
[tool.mypy]
python_version = "3.9"
strict = false
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
no_implicit_optional = true
show_error_codes = true
pretty = true
exclude = [
  "tests/",
  "benchmarks/",
]

# --- ruff (lint + format) ---
[tool.ruff]
line-length = 100
target-version = "py39"
exclude = ["build", "dist", ".venv"]

[tool.ruff.lint]
extend-select = ["I"]  # isort
ignore = [
  "E501",  # line length handled by formatter
]

[tool.ruff.format]
quote-style = "double"

# --- black ---
[tool.black]
line-length = 100
target-version = ["py39"]
exclude = '''
(
  /(
      \.venv
    | build
    | dist
  )/
)
'''

# --- isort ---
[tool.isort]
profile = "black"
line_length = 100
src_paths = ["src", "tests"]

# --- coverage (optional but useful in CI) ---
[tool.coverage.run]
source = ["src/cc"]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
]
